server:
  port: 8100
  compression: # 是用来配置服务器响应压缩的属性。这个属性可以用于启用或配置响应压缩，以减少数据传输大小，提高网络传输效率。
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json

#配置数据源
spring:
  # 上传文件大小
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 100MB
  datasource:
    druid:
      # 配置监控统计
      webStatFilter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        # 控制台管理用户名和密码
        login-username: ${DRUID_USER:admin}
        login-password: ${DRUID_PWD:123456}
      filter:
        stat:
          enabled: true
          # 记录慢SQL
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
    # 指定使用 Druid 数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 动态数据源文档 @see https://www.kancloud.cn/tracy5546/dynamic-datasource/content
    dynamic:
      p6spy: true # 默认false,建议线上关闭。
      primary: master  #设置默认的数据源或者数据源组,默认值即为 master
      strict: false #严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      datasource:
        # 主库数据源
        master:
          driverClassName: com.p6spy.engine.spy.P6SpyDriver
          #postgres配置
#          url: jdbc:p6spy:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_NAME:eladmin}?currentSchema=${DB_SCHEMA:eladmin}
          #mysql配置
          url: jdbc:p6spy:mysql://${DB_HOST:127.0.0.1}:${DB_PORT:3306}/${DB_NAME:eladmin}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
          username: ${DB_USER:root}
          password: ${DB_PWD:123456}
        # 从库数据源
    #        slave:
    #          driverClassName: com.p6spy.engine.spy.P6SpyDriver
    #          url: jdbc:p6spy:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_NAME:eladmin}?currentSchema=${DB_SCHEMA:eladmin}
    #          username: ${DB_USER:root}
    #          password: ${DB_PWD:123456}
      druid:
        # 初始连接数
        initial-size: 5
        # 最小连接数
        min-idle: 15
        # 最大连接数
        max-active: 30
        # 超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        # 获取连接超时时间
        max-wait: 3000
        # 连接有效性检测时间
        time-between-eviction-runs-millis: 60000
        # 连接在池中最小生存的时间
        min-evictable-idle-time-millis: 300000
        # 连接在池中最大生存的时间
        max-evictable-idle-time-millis: 900000
        # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        test-while-idle: true
        # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
        test-on-borrow: true
        # 是否在归还到池中前进行检验
        test-on-return: false
        # 检测连接是否有效
        validation-query: select 1
  # redis
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PWD:}
    #数据库索引
    database: ${REDIS_DB:0}
    #连接超时时间
    timeout: 5000
    redisson:
      file: classpath:redisson.yaml

# 登录相关配置
login:
  # 登录缓存
  cache-enable: true
  #  是否限制单用户登录
  single-login: false
  # 默认密码
  default-password: 123456

#  验证码
captcha:
  #  验证码类型配置 查看 LoginProperties 类
  type: arithmetic
  #  登录图形验证码有效时间/分钟
  expiration: 2
  #  验证码高度
  width: 111
  #  验证码宽度
  height: 36
  # 内容长度
  length: 2
  # 字体名称，为空则使用默认字体
  font-name:
  # 字体大小
  font-size: 25

#jwt
jwt:
  header: Authorization
  # 令牌前缀
  token-start-with: Bearer
  # 必须使用最少88位的Base64对该令牌进行编码
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI
  # 令牌过期时间 默认1天有效 此处单位/秒，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
  token-validity-in-seconds: 86400
  # 在线用户key
  online-key: online-token-
  # 验证码
  code-key: code-key-
  # token 续期检查时间范围（默认2小时，单位秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
  detect: 7200
  # 续期时间范围，默认1小时，单位秒
  renew: 3600
  # 放行接口
  permit-url:
    - /favicon.ico
    - /doc.html # swagger
    - /webjars/**
    - /v3/api-docs/**
    - /druid/** # 阿里巴巴 druid
    - /webSocket/**
    - /ws/**
    - /auth/**
    - /api/**/open/**

web-socket:
  enable-cluster: true
  netty:
    port: 58080
    path: /ws
    backlog: 1024

# IP 本地解析
ip:
  local-parsing: true

#是否允许生成代码，生产环境设置为false
generator:
  enabled: true

#密码加密传输，前端公钥加密，后端私钥解密
rsa:
  private_key: MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0vfvyTdGJkdbHkB8mp0f3FE0GYP3AYPaJF7jUd1M0XxFSE2ceK3k2kw20YvQ09NJKk+OMjWQl9WitG9pB6tSCQIDAQABAkA2SimBrWC2/wvauBuYqjCFwLvYiRYqZKThUS3MZlebXJiLB+Ue/gUifAAKIg1avttUZsHBHrop4qfJCwAI0+YRAiEA+W3NK/RaXtnRqmoUUkb59zsZUBLpvZgQPfj1MhyHDz0CIQDYhsAhPJ3mgS64NbUZmGWuuNKp5coY2GIj/zYDMJp6vQIgUueLFXv/eZ1ekgz2Oi67MNCk5jeTF2BurZqNLR3MSmUCIFT3Q6uHMtsB9Eha4u7hS31tj1UWE+D+ADzp59MGnoftAiBeHT7gDMuqeJHPL4b+kC+gzV4FGTfhR9q3tTbklZkD2A==

# 文件存储路径
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/eladmin/file/
    avatar: /home/eladmin/avatar/
  windows:
    path: C:\eladmin\file\
    avatar: C:\eladmin\avatar\
  # 文件大小 /M
  maxSize: 100
  avatarMaxSize: 5

#是否开启 swagger-ui
swagger:
  enabled: true
  title: 'eladmin-nt1模版项目'
  description: '后台管理接口文档'
  author: '王家豪'
  email: '1332661444@qq.com'
  blog: 'https://blog.remember5.top'
  service-url: 'http://127.0.0.1:8080'
  version: '1.0'
  host: '/'
  group-name: 'OpenApi'
  base-package: com.remember5.openapi

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.remember5.openapi

# knife4j增强模式 @see https://doc.xiaominfo.com/knife4j/documentation/enhance.html
knife4j:
  enable: true
  cors: false
  production: false
  basic:
    enable: false
    username: test
    password: 12313
  documents:
    - group: 2.X版本
      name: 接口签名ss
      locations: classpath:sign/*
  setting:
    language: zh-CN
    enableSwaggerModels: true
    enableDocumentManage: true
    swaggerModelName: 实体类列表
    enableVersion: false
    enableReloadCacheParameter: false
    enableAfterScript: true
    enableFilterMultipartApiMethodType: POST
    enableFilterMultipartApis: false
    enableRequestCache: true
    enableHost: false
    enableHostText: 192.168.0.193:8000
    enableHomeCustom: true
    homeCustomLocation: classpath:markdown/home.md
    enableSearch: false
    enableFooter: false
    enableFooterCustom: true
    footerCustomContent: Apache License 2.0 | Copyright  2019-[浙江八一菜刀股份有限公司](https://gitee.com/xiaoym/knife4j)
    enableDynamicParameter: false
    enableDebug: true
    enableOpenApi: false
    enableGroup: true

# 日志配置文件
logging:
  config: classpath:log4j2-spring.xml
  level:
    root: INFO

minio:
  enabled: false
  host: ${MINIO_HOST:http://127.0.0.1:9000}
  bucket: ${MINIO_BUCKET:}
  access-key: ${MINIO_AK:""}
  secret-key: ${MINIO_SK:""}
  domain: ${MINIO_DOMAIN:}
  file-expires: 10800
  bucket-prefix: bk-

getui:
  enabled: false
  maxConnections: 200
  appid:
  appkey:
  masterSecret:
  domain: https://restapi.getui.com/v2/

# see https://github.com/Wechat-Group/WxJava/tree/develop/spring-boot-starters/wx-java-miniapp-spring-boot-starter
wx:
  miniapp:
    appid: test
    secret: test
    aesKey: ''
    msgDataFormat: 'JSON'                  # 消息格式，XML或者JSON.
    token: ''
    config-storage:
      key-prefix: 'wa'                  # 相关redis前缀配置: wa(默认)
      type: RedisTemplate                     # 配置类型: Memory(默认), Jedis, RedisTemplate
      redis:
        database: ${REDIS_DB:0}
        host: ${REDIS_HOST:127.0.0.1}
        port: ${REDIS_PORT:6379}
        password: ${REDIS_PWD:}
        #连接超时时间
        timeout: 5000
      http-client-type: 'HttpClient'      # http客户端类型: HttpClient(默认), OkHttp, JoddHttp
      http-proxy-host:
      http-proxy-password:
      http-proxy-port:
      http-proxy-username:

# app部分配置
app:
  # 是否开启热更
  enabled-hot-update: true
  # 拦截归档版本，启动会加载历史版本到redis。暂不可用
  intercept-archived: false
  # 安全校验key
  secret-key:

